{"version":3,"sources":["helpers/urls.js","helpers/util.js","actions/posts.js","actions/actionTypes.js","components/Comment.js","components/Post.js","components/PostsList.js","actions/auth.js","actions/search.js","components/Navbar.js","components/FriendsItem.js","components/FriendsList.js","components/CreatePost.js","components/Chat.js","components/Home.js","components/Page404.js","components/Login.js","components/Settings.js","components/Signup.js","actions/profile.js","reducers/profile.js","actions/friends.js","components/UserProfile.js","components/App.js","reducers/auth.js","reducers/friends.js","reducers/search.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["APIroot","APIURLS","login","signup","editProfile","fetchPosts","page","limit","userProfile","userid","userFriends","addFriend","userId","removeFriend","createNewPost","createComment","toggleLike","id","likeType","searchUser","searchText","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","console","log","join","getAuthTokenFromlocalStorage","localStorage","getItem","dispatch","url","fetch","then","response","json","data","type","posts","content","postId","method","headers","Authorization","body","post_id","success","comment","addComment","addLike","addPostLikeToStore","Comment","this","props","undefined","className","user","name","likes","length","Component","Post","handleCommentChange","e","setState","target","value","handleCommentAdd","key","state","post","_id","handlePostLike","isPostLiked","includes","to","src","alt","onClick","comments","placeholder","onChange","onKeyPress","map","connect","auth","PostsList","email","password","confirmPassword","confirm_password","error","message","startSignup","searchResultSucces","users","searchResult","Navbar","logout","removeItem","handleSearchInput","results","isLoggedin","search","Friends","friend","FriendsList","friends","to_user","CreatePost","handleChange","handleClick","Chat","setupConnections","socketConnection","socket","self","on","emit","user_email","userEmail","chatroom","messages","messageObject","typedMessage","handleSubmitMessage","io","height","Home","Page404","Login","handleFormSubmit","preventDefault","setItem","token","handleEmailChange","handlePasswordChange","inProgress","from","location","pathname","required","disabled","Settings","fieledName","val","handleSave","editUser","editMode","Signup","handleInputChange","field","onFormSubmit","fetchUserProfile","initialProfileState","fetchUserFriends","catch","UserProfile","checkIfUserIsAFriend","match","indexOf","handleAddFriendClick","a","opts","successMessage","friendship","handleRemoveFriend","prevProps","prevParams","currentParams","profile","isUserAFriend","PrivateRoute","privateRouteProps","path","component","render","App","jwtDecode","authenticateUser","exact","React","initialAuthState","initialFriendsState","initialSearchstate","combineReducers","action","newPosts","updatedPost","concat","newArr","filter","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.713f8bfa.chunk.js","sourcesContent":["const APIroot = 'http://codeial.com:8000/api/v2';\nexport const APIURLS = {\n  login: `${APIroot}/users/login`,\n  signup: `${APIroot}/users/signup`,\n  editProfile: () => `${APIroot}/users/edit`,\n  fetchPosts: (page = 1, limit = 25) =>\n    `${APIroot}/posts?page=${page}&limit=${limit}`,\n  userProfile: (userid) => `${APIroot}/users/${userid}`,\n  userFriends: () => `${APIroot}/friendship/fetch_user_friends`,\n  addFriend: (userId) =>\n    `${APIroot}/friendship/create_friendship?user_id=${userId}`,\n  removeFriend: (userId) =>\n    `${APIroot}/friendship/remove_friendship?user_id=${userId}`,\n  createNewPost: () => `${APIroot}/posts/create`,\n  createComment: () => `${APIroot}/comments/`,\n  toggleLike: (id, likeType) =>\n    `${APIroot}/likes/toggle?likeable_id=${id}&likeable_type=${likeType}`,\n  searchUser: (searchText) => `${APIroot}/users/search?text=${searchText}`,\n};\n","export function getFormBody(params) {\n  let formBody = [];\n  for (let property in params) {\n    let encodedKey = encodeURIComponent(property);\n    let encodedValue = encodeURIComponent(params[property]);\n    formBody.push(encodedKey + '=' + encodedValue);\n  }\n  console.log('URLencoded form ', formBody.join('&'));\n  return formBody.join('&');\n}\n\nexport function getAuthTokenFromlocalStorage() {\n  return localStorage.getItem('token');\n}\n","import {\n  UPDATE_POSTS,\n  CREATE_POST,\n  ADD_COMMENT,\n  UPDATE_POST_LIKE,\n} from './actionTypes';\nimport { APIURLS } from '../helpers/urls';\nimport { func } from 'prop-types';\nimport { getAuthTokenFromlocalStorage, getFormBody } from '../helpers/util';\nexport function fetchPosts() {\n  return (dispatch) => {\n    const url = APIURLS.fetchPosts();\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        dispatch(upadePosts(data.data.posts));\n      });\n  };\n}\n\nexport function upadePosts(posts) {\n  return {\n    type: UPDATE_POSTS,\n    posts,\n  };\n}\n\nexport function createPostSuccess(post) {\n  return {\n    type: CREATE_POST,\n    post,\n  };\n}\n\nexport function createNewPost(content) {\n  return (dispatch) => {\n    const url = APIURLS.createNewPost();\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n      body: getFormBody({ content }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%CREATEPOST');\n        if (data.success) {\n          dispatch(createPostSuccess(data.data.post));\n        }\n      });\n  };\n}\nexport function createComment(content, postId) {\n  return (dispatch) => {\n    const url = APIURLS.createComment();\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n      body: getFormBody({ content, post_id: postId }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          dispatch(addComment(data.data.comment, postId));\n        }\n      });\n  };\n}\n\nexport function addComment(comment, postId) {\n  return {\n    type: ADD_COMMENT,\n    comment,\n    postId,\n  };\n}\n\nexport function addLike(id, likeType, userId) {\n  return (dispatch) => {\n    const url = APIURLS.toggleLike(id, likeType);\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('LIKEDATAAA', data);\n\n        if (data.success) {\n          dispatch(addPostLikeToStore(id, userId));\n        }\n      });\n  };\n}\n\nexport function addPostLikeToStore(postId, userId) {\n  return {\n    type: UPDATE_POST_LIKE,\n    postId,\n    userId,\n  };\n}\n","export const UPDATE_POSTS = 'UPDATE_POSTS';\n\n//login\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOGOUT = 'LOGOUT';\n//Signup\n\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n\nexport const CLEARAUTHSTATE = 'CLEARAUTHSTATE';\n\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS';\nexport const EDIT_USER_FAIL = 'EDIT_USER_FAIL';\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL';\nexport const FETCH_USER_PROFILE_START = 'FETCH_USER_PROFILE_START';\n\nexport const FETCH_USER_FRIENDS_SUCCESS = 'FETCH_USER_FRIENDS_SUCCESS';\n\nexport const ADD_FRIEND = 'ADD_FRIEND';\n\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND';\n\nexport const CREATE_POST = 'CREATE_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const UPDATE_POST_LIKE = 'UPDATE_POST_LIKE';\n\n//Seearch\n\nexport const FETCH_SEARCH_RESULTSSUCCESS = 'FETCH_SEARCH_RESULTSSUCCESS';\n","import React, { Component } from 'react';\n\nexport default class Comment extends Component {\n  render() {\n    const { comment } = this.props;\n    console.log(\n      'CCCCCCCCCCOOOOOOOOOMMMMMMMMMMEEEEEEEENNNNNNNNTTTTTTTT',\n      comment\n    );\n    if (comment === undefined) {\n      return <div> </div>;\n    }\n    return (\n      <div className=\"post-comment-item\">\n        <div className=\"post-comment-header\">\n          <span className=\"post-comment-author\">{comment.user.name}</span>\n          <span className=\"post-comment-time\">a minute ago</span>\n          <span className=\"post-comment-likes\">\n            {comment.likes.length} likes\n          </span>\n        </div>\n\n        <div className=\"post-comment-content\">{comment.content}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Comment from './Comment';\nimport { createComment, addLike } from '../actions/posts';\nimport { connect } from 'react-redux';\n\nexport class Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: '',\n    };\n  }\n\n  handleCommentChange = (e) => {\n    this.setState({\n      comment: e.target.value,\n    });\n  };\n  handleCommentAdd = (e) => {\n    if (e.key === 'Enter') {\n      this.props.dispatch(\n        createComment(this.state.comment, this.props.post._id)\n      );\n\n      this.setState({\n        comment: '',\n      });\n    }\n  };\n  handlePostLike = () => {\n    const { post, user } = this.props;\n    this.props.dispatch(addLike(post._id, 'Post', user._id));\n  };\n\n  render() {\n    const { post, user } = this.props;\n    const isPostLiked = post.likes.includes(user._id);\n    console.log('*****************************', this.props);\n    return (\n      <div>\n        <div className=\"post-wrapper\" key={post._id}>\n          <div className=\"post-header\">\n            <div className=\"post-avatar\">\n              <Link to={`/user/${post.user._id}`}>\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                  alt=\"user-pic\"\n                />\n              </Link>\n\n              <div>\n                <span className=\"post-author\">{post.user.name}</span>\n                <span className=\"post-time\">a minute ago</span>\n              </div>\n            </div>\n            <div className=\"post-content\">{post.content}</div>\n\n            <div className=\"post-actions\">\n              <button\n                className=\"post-like no-btn\"\n                onClick={this.handlePostLike}\n              >\n                {isPostLiked ? (\n                  <img\n                    src=\"https://image.flaticon.com/icons/svg/325/325072.svg\"\n                    alt=\"likes-icon\"\n                  />\n                ) : (\n                  <img\n                    src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\n                    alt=\"likes-icon\"\n                  />\n                )}\n                <span>{post.likes.length}</span>\n              </button>\n\n              <div className=\"post-comments-icon\">\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\n                  alt=\"comments-icon\"\n                />\n                <span>{post.comments.length}</span>\n              </div>\n            </div>\n            <div className=\"post-comment-box\">\n              <input\n                placeholder=\"Start typing a comment\"\n                onChange={this.handleCommentChange}\n                onKeyPress={this.handleCommentAdd}\n              />\n            </div>\n\n            <div className=\"post-comments-list\">\n              <div className=\"post-comments-item\">\n                {post.comments.map((comment) => (\n                  <Comment comment={comment} postId={post._id} />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return {\n    user: auth.user,\n  };\n}\nexport default connect(mapStateToProps)(Post);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { CreatePost } from '.';\nimport Post from './Post';\nclass PostsList extends Component {\n  render() {\n    const { posts } = this.props;\n    return (\n      <div className=\"posts-list\">\n        <CreatePost />\n        {posts.map((post) => (\n          <Post post={post} key={post._id} />\n        ))}\n      </div>\n    );\n  }\n}\n\nPostsList.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n\nexport default PostsList;\n","import {\n  LOGIN_START,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  SIGNUP_START,\n  SIGNUP_FAIL,\n  SIGNUP_SUCCESS,\n  AUTHENTICATE_USER,\n  LOGOUT,\n  CLEARAUTHSTATE,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_FAIL,\n} from './actionTypes';\nimport { APIURLS } from '../helpers/urls';\nimport { getFormBody, getAuthTokenFromlocalStorage } from '../helpers/util';\n\nexport function startLogin() {\n  return {\n    type: LOGIN_START,\n  };\n}\nexport function loginFailed(errorMessage) {\n  return {\n    type: LOGIN_FAIL,\n    error: errorMessage,\n  };\n}\nexport function loginSuccess(user) {\n  return {\n    type: LOGIN_SUCCESS,\n    user,\n  };\n}\n\nexport function login(email, password) {\n  return (dispatch) => {\n    dispatch(startLogin());\n    const url = APIURLS.login;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: getFormBody({ email, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('data', data);\n        if (data.success) {\n          //TODO:create a dispactch for saing user\n          localStorage.setItem('token', data.data.token);\n\n          dispatch(loginSuccess(data.data.user));\n        } else {\n          dispatch(loginFailed(data.message));\n        }\n      });\n  };\n}\n\nexport function signup(email, password, confirmPassword, name) {\n  return (dispatch) => {\n    const url = APIURLS.signup;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: getFormBody({\n        email,\n        password,\n        confirm_password: confirmPassword,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Data', data);\n        if (data.success) {\n          //TODO:signup success\n          dispatch(signupSuccess(data.data.user));\n          return;\n        } else {\n          dispatch(signupFailed(data.message));\n        }\n      });\n  };\n}\n\nexport function authenticateUser(user) {\n  return {\n    type: AUTHENTICATE_USER,\n    user,\n  };\n}\n\nexport function logoutUser() {\n  return {\n    type: LOGOUT,\n  };\n}\n\nexport function startSignup() {\n  return {\n    type: SIGNUP_START,\n  };\n}\nexport function signupFailed(error) {\n  return {\n    type: SIGNUP_FAIL,\n    error,\n  };\n}\n\nexport function signupSuccess(user) {\n  return {\n    type: SIGNUP_SUCCESS,\n    user,\n  };\n}\n\nexport function clearAuthState() {\n  return {\n    type: CLEARAUTHSTATE,\n  };\n}\n\nexport function editUserSuccess(user) {\n  return {\n    type: EDIT_USER_SUCCESS,\n    user,\n  };\n}\n\nexport function editUserFail(error) {\n  return {\n    type: EDIT_USER_FAIL,\n    error,\n  };\n}\n\nexport function editUser(name, password, confirmPassword, userId) {\n  return (dispatch) => {\n    const url = APIURLS.editProfile();\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n      body: getFormBody({\n        name,\n        password,\n        confirm_password: confirmPassword,\n        id: userId,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('PROFILE EDIT', data);\n        if (data.success) {\n          dispatch(editUserSuccess(data.data.user));\n          if (data.data.token) {\n            localStorage.setItem('token', data.data.token);\n          }\n          return;\n        }\n\n        dispatch(editUserFail(data.message));\n      });\n  };\n}\n","import { FETCH_SEARCH_RESULTSSUCCESS } from './actionTypes';\nimport { APIURLS } from '../helpers/urls';\nimport { getAuthTokenFromlocalStorage } from '../helpers/util';\n\nexport function searchResultSucces(users) {\n  return {\n    type: FETCH_SEARCH_RESULTSSUCCESS,\n    users,\n  };\n}\n\nexport function searchResult(searchText) {\n  return (dispatch) => {\n    const url = APIURLS.searchUser(searchText);\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('Search Data');\n        if (data.success) {\n          dispatch(searchResultSucces(data.data.users));\n        } else {\n          dispatch(searchResultSucces([]));\n        }\n      });\n  };\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/auth';\nimport { searchResult } from '../actions/search';\n\nexport class Navbar extends Component {\n  logout = () => {\n    localStorage.removeItem('token');\n\n    this.props.dispatch(logoutUser());\n  };\n  handleSearchInput = (e) => {\n    const searchText = e.target.value;\n    // if (searchText.length > 0) {\n    // }\n    this.props.dispatch(searchResult(searchText));\n  };\n  render() {\n    const { auth, results } = this.props;\n    return (\n      <nav className=\"nav\">\n        <div className=\"left-div\">\n          <Link to=\"/home\">\n            <img\n              className=\"logo\"\n              src=\"https://image.flaticon.com/icons/svg/3221/3221956.svg\"\n              alt=\"logo\"\n            />\n          </Link>\n        </div>\n        <div className=\"search-container\">\n          <img\n            className=\"search-icon\"\n            src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\n            alt=\"search-icon\"\n          />\n          <input placeholder=\"Search\" onChange={this.handleSearchInput} />\n\n          {results.length > 0 && (\n            <div className=\"search-results\">\n              <ul>\n                {results.map((user) => (\n                  <li className=\"search-results-row\">\n                    <Link to={`/user/${user._id}`}>\n                      <img\n                        src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                        alt=\"user-dp\"\n                      />\n                      <span>{user.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div className=\"right-nav\">\n          {auth.isLoggedin && (\n            <div className=\"user\">\n              <Link to=\"/settings\">\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                  alt=\"user-dp\"\n                  id=\"user-dp\"\n                />\n              </Link>\n              <span>{auth.user.name}</span>\n            </div>\n          )}\n          <div className=\"nav-links\">\n            <ul>\n              {!auth.isLoggedin && (\n                <li>\n                  <Link to=\"/login\">Log in</Link>\n                </li>\n              )}\n              {!auth.isLoggedin && (\n                <li>\n                  <Link to=\"/signup\">Signup</Link>\n                </li>\n              )}\n              {auth.isLoggedin && <li onClick={this.logout}>Logout</li>}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    results: state.search.results,\n  };\n}\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Friends extends Component {\n  render() {\n    console.log(this.props, 'FREINDSLIST VIEW<<<<<<<<<<<<<<<<<<<<<<<<<');\n    return (\n      <div>\n        <Link className=\"friends-item\" to={`user/${this.props.friend._id}`}>\n          <div className=\"friends-img\">\n            <img\n              src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n              alt=\"user-pic\"\n            />\n          </div>\n          <div className=\"friends-name\">{this.props.friend.email}</div>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport FriendsItem from './FriendsItem';\nexport default class FriendsList extends Component {\n  render() {\n    const { friends } = this.props;\n    console.log('FFFFFFRIIIIIIENNNNNNNNDLLLLLIST', friends);\n    return (\n      <div className=\"friends-list\">\n        <div className=\"header\">My Friends </div>\n        {friends && friends.length === 0 && (\n          <div className=\"no-friends\">No friends found!</div>\n        )}\n\n        {friends &&\n          friends.map((friend) => (\n            <FriendsItem friend={friend.to_user} key={friend._id} />\n          ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createNewPost } from '../actions/posts';\n\nexport class CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: '',\n    };\n  }\n  handleChange = (e) => {\n    this.setState({\n      content: e.target.value,\n    });\n  };\n  handleClick = () => {\n    this.props.dispatch(createNewPost(this.state.content));\n  };\n  render() {\n    return (\n      <div className=\"create-post\">\n        <textarea\n          className=\"add-post\"\n          onChange={this.handleChange}\n          onClick={this.handleClick}\n        />\n        <div>\n          <button id=\"add-post-btn\" onClick={this.handleClick}>\n            Add Post\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(CreatePost);\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport '../chat.css';\nimport { func } from 'prop-types';\nimport { connect } from 'react-redux';\nexport class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      typedMessage: '',\n    };\n\n    this.socket = io.connect('https://54.237.158.65:5000');\n    this.userEmail = props.user.email;\n    if (this.userEmail) {\n      this.setupConnections();\n    }\n  }\n\n  setupConnections = () => {\n    const socketConnection = this.socket;\n    const self = this;\n\n    this.socket.on('connect', function () {\n      console.log('CONNECTION ESTABLISHED');\n\n      socketConnection.emit('join_room', {\n        user_email: this.userEmail,\n        chatroom: 'codeial',\n      });\n\n      socketConnection.on('user_joined', function (data) {\n        console.log('NE USER JOINED', data);\n      });\n    });\n\n    this.socket.on('receive_message', function (data) {\n      // add message to state\n      const { messages } = self.state;\n      const messageObject = {};\n      messageObject.content = data.message;\n\n      if (data.user_email === self.userEmail) {\n        messageObject.self = true;\n      }\n\n      self.setState({\n        messages: [...messages, messageObject],\n        typedMessage: '',\n      });\n    });\n  };\n  handleSubmitMessage = () => {\n    const { typedMessage } = this.state;\n    console.log('send message');\n    if (typedMessage && this.userEmail) {\n      this.socket.emit('send_message', {\n        message: typedMessage,\n        user_email: this.userEmail,\n        chatroom: 'codeial',\n      });\n    }\n  };\n  render() {\n    const { messages, typedMessage } = this.state;\n    return (\n      <div className=\"chat-container\">\n        <div className=\"chat-header\">\n          Chat\n          <img\n            src=\"https://www.iconsdb.com/icons/preview/white/minus-5-xxl.png\"\n            alt=\"\"\n            height={17}\n          />\n        </div>\n        <div className=\"chat-messages\">\n          {messages.map((message) => (\n            <div\n              className={\n                message.self\n                  ? 'chat-bubble self-chat'\n                  : 'chat-bubble other-chat'\n              }\n            >\n              {message.content}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-footer\">\n          <input\n            type=\"text\"\n            value={typedMessage}\n            onChange={(e) => this.setState({ typedMessage: e.target.value })}\n          />\n          <button onClick={this.handleSubmitMessage}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return {\n    user: auth.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Chat);\n","import React, { Component } from 'react';\nimport { PostList } from '.';\nimport FriendsList from './FriendsList';\nimport CreatePost from './CreatePost';\nimport Chat from './Chat';\n\nexport default class Home extends Component {\n  render() {\n    const { posts, friends, isLoggedin } = this.props;\n    return (\n      <div className=\"home\">\n        <PostList posts={posts} />\n        {isLoggedin && <FriendsList friends={friends} />}\n        {isLoggedin && <Chat />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nfunction Page404(props) {\n  return <div>404!!! Looks Like You Lost the Way ....</div>;\n}\n\nexport default Page404;\n","import React, { Component } from 'react';\nimport { login, clearAuthState } from '../actions/auth';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    // this.emailInputRef = React.createRef();\n    // this.passwordInputRef = React.createRef();\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n  componentWillUnmount() {\n    this.props.dispatch(clearAuthState());\n  }\n\n  handleFormSubmit = (e) => {\n    const { email, password } = this.state;\n    e.preventDefault();\n    console.log(this.state);\n\n    if (email && password) {\n      this.props.dispatch(login(email, password));\n    }\n  };\n  handleEmailChange = (e) => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n  handlePasswordChange = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  render() {\n    const { error, inProgress, isLoggedin } = this.props.auth;\n    const { from } = this.props.location.state || {\n      from: { pathname: '/home' },\n    };\n    console.log('LOGN PROPS', this.props);\n    if (isLoggedin) {\n      return <Redirect to={from} />;\n    }\n    return (\n      <form className=\"login-form\">\n        <span className=\"login-signup-header\"> Login</span>\n        {error && <div className=\"alert error-dailog\">{error}</div>}\n        <div className=\"field\">\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            // ref={this.emailInputRef}\n            onChange={this.handleEmailChange}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            // ref={this.passwordInputRef}\n            onChange={this.handlePasswordChange}\n            required\n          />\n        </div>\n        <div className=\"field\">\n          {inProgress ? (\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\n              Loging in ...\n            </button>\n          ) : (\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\n              Login\n            </button>\n          )}\n        </div>\n      </form>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\nexport default connect(mapStateToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { editUser, clearAuthState } from '../actions/auth';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      name: props.auth.user.name,\n      password: '',\n      confirmPassword: '',\n      editMode: false,\n    };\n  }\n  componentWillUnmount() {\n    this.props.dispatch(clearAuthState());\n  }\n  handleChange = (fieledName, val) => {\n    this.setState({\n      [fieledName]: val,\n    });\n  };\n  handleSave = () => {\n    const { password, confirmPassword, name } = this.state;\n    const { user } = this.props.auth;\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\n  };\n  render() {\n    const { user, error } = this.props.auth;\n    const { editMode } = this.state;\n    return (\n      <div className=\"settings\">\n        <div className=\"img-container\">\n          <img\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n            alt=\"user-dp\"\n          />\n        </div>\n        {error && <div className=\"alert error-dailog\"> {error} </div>}\n        {error == false && (\n          <div className=\"alert success-dailog\"> Successfully Updated </div>\n        )}\n        <div className=\"field\">\n          <div className=\"field-label\">Email</div>\n          <div className=\"field-value\">{user.email}</div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"field-label\">name</div>\n          {editMode ? (\n            <input\n              type=\"text\"\n              onChange={(e) => this.handleChange('name', e.target.value)}\n              value={this.state.name}\n            />\n          ) : (\n            <div className=\"field-value\">{user.name}</div>\n          )}\n        </div>\n\n        {editMode && (\n          <div className=\"field\">\n            <div className=\"field-label\">New password</div>\n\n            <input\n              type=\"password\"\n              onChange={(e) => this.handleChange('password', e.target.value)}\n              value={this.state.password}\n            />\n          </div>\n        )}\n\n        {editMode && (\n          <div className=\"field\">\n            <div className=\"field-label\">Confirm password</div>\n\n            <input\n              type=\"password\"\n              onChange={(e) =>\n                this.handleChange('confirmPassword', e.target.value)\n              }\n              value={this.state.confirmPassword}\n            />\n          </div>\n        )}\n\n        <div className=\"btn-grp\">\n          {editMode ? (\n            <button className=\"button save-btn\" onClick={this.handleSave}>\n              Save\n            </button>\n          ) : (\n            <button\n              className=\"button edit-btn\"\n              onClick={() => this.handleChange('editMode', true)}\n            >\n              Edit profile\n            </button>\n          )}\n\n          {editMode && (\n            <div\n              className=\"go-back\"\n              onClick={() => this.handleChange('editMode', false)}\n            >\n              Go back\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return {\n    auth,\n  };\n}\nexport default connect(mapStateToProps)(Settings);\n","import React, { Component } from 'react';\nimport { startSignup, signup, clearAuthState } from '../actions/auth';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nexport class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      name: '',\n      password: '',\n      confirmPassword: '',\n    };\n  }\n  componentWillUnmount() {\n    this.props.dispatch(clearAuthState());\n  }\n\n  handleInputChange = (field, value) => {\n    this.setState({\n      [field]: value,\n    });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const { email, password, confirmPassword, name } = this.state;\n    if (email && password && confirmPassword && name) {\n      this.props.dispatch(startSignup);\n      this.props.dispatch(signup(email, password, confirmPassword, name));\n    }\n  };\n  render() {\n    const { inProgress, error, isLoggedin } = this.props.auth;\n    if (isLoggedin) {\n      return <Redirect to=\"/home\" />;\n    }\n    return (\n      <form className=\"login-form\">\n        <span className=\"login-signup-header\"> Signup</span>\n        {error && <div className=\"alert error-dailog\">{error}</div>}\n        <div className=\"field\">\n          <input\n            placeholder=\"Name\"\n            type=\"text\"\n            required\n            onChange={(e) => this.handleInputChange('name', e.target.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            required\n            onChange={(e) => this.handleInputChange('email', e.target.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <input\n            placeholder=\"Confirm password\"\n            type=\"password\"\n            required\n            onChange={(e) =>\n              this.handleInputChange('confirmPassword', e.target.value)\n            }\n          />\n        </div>\n        <div className=\"field\">\n          <input\n            placeholder=\"Password\"\n            type=\"password\"\n            required\n            onChange={(e) => this.handleInputChange('password', e.target.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <button onClick={this.onFormSubmit} disabled={inProgress}>\n            Signup\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStorageToProps = ({ auth }) => ({ auth });\n\nexport default connect(mapStorageToProps)(Signup);\n","import {\n  USER_PROFILE_FAIL,\n  USER_PROFILE_SUCCESS,\n  FETCH_USER_PROFILE_START,\n} from './actionTypes';\nimport { APIURLS } from '../helpers/urls';\nimport { getAuthTokenFromlocalStorage } from '../helpers/util';\n\nexport function startUserProfileFetch() {\n  return {\n    type: FETCH_USER_PROFILE_START,\n  };\n}\nexport function userProfileSuccess(user) {\n  return {\n    type: USER_PROFILE_SUCCESS,\n    user,\n  };\n}\n\nexport function userProfileFail(error) {\n  return {\n    type: USER_PROFILE_FAIL,\n    error,\n  };\n}\n\nexport function fetchUserProfile(userId) {\n  return (dispatch) => {\n    dispatch(startUserProfileFetch());\n    const url = APIURLS.userProfile(userId);\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(userProfileSuccess(data.data.user));\n      });\n  };\n}\n","import {\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAIL,\n  FETCH_USER_PROFILE_START,\n} from '../actions/actionTypes';\n\nconst initialProfileState = {\n  user: {},\n  error: null,\n  success: null,\n  inProgress: false,\n};\nexport default function profile(state = initialProfileState, action) {\n  switch (action.type) {\n    case USER_PROFILE_SUCCESS:\n      return {\n        ...state,\n        success: true,\n        user: action.user,\n        inProgress: false,\n      };\n    case USER_PROFILE_FAIL:\n      return {\n        ...state,\n        error: action.error,\n        inProgress: false,\n      };\n    case FETCH_USER_PROFILE_START:\n      return {\n        ...state,\n        inProgress: true,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_USER_FRIENDS_SUCCESS,\n  ADD_FRIEND,\n  REMOVE_FRIEND,\n} from './actionTypes';\nimport { APIURLS } from '../helpers/urls';\nimport { getAuthTokenFromlocalStorage } from '../helpers/util';\nimport { func } from 'prop-types';\n\nexport function fetchUserFriends(userId) {\n  return (dispatch) => {\n    const url = APIURLS.userFriends();\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data.data.friends, 'DDDDDDDDAAAAAAAAAAATAAAAAAAAAAAA');\n\n        dispatch(fetchUserFriendsSuccess(data.data.friends));\n      })\n      .catch((error) => {\n        console.log(error, '~~~~~~~~~~~~~~~ERROR');\n      });\n  };\n}\nexport function fetchUserFriendsSuccess(friends) {\n  return {\n    type: FETCH_USER_FRIENDS_SUCCESS,\n    friends,\n  };\n}\n\nexport function addFriend(friend) {\n  return {\n    type: ADD_FRIEND,\n    friend,\n  };\n}\n\nexport function removeFriend(userId) {\n  return {\n    type: REMOVE_FRIEND,\n    userId,\n  };\n}\n","import React, { Component } from 'react';\nimport { fetchUserProfile } from '../actions/profile';\nimport { func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport profile from '../reducers/profile';\nimport { APIURLS } from '../helpers/urls';\nimport { getAuthTokenFromlocalStorage } from '../helpers/util';\nimport { addFriend, removeFriend } from '../actions/friends';\n\nexport class UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      success: null,\n      error: null,\n      successMessage: '',\n    };\n  }\n  componentDidMount() {\n    const { match } = this.props;\n    // console.log('**************************Match', match);\n    if (match.params.userId) {\n      console.log('User Profile is to be showed');\n      this.props.dispatch(fetchUserProfile(match.params.userId));\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      match: { params: prevParams },\n    } = prevProps;\n\n    const {\n      match: { params: currentParams },\n    } = this.props;\n\n    if (\n      prevParams &&\n      currentParams &&\n      prevParams.userId !== currentParams.userId\n    ) {\n      this.props.dispatch(fetchUserProfile(currentParams.userId));\n      // this.setState({\n      //   successMessage: '',\n      //   success: null,\n      //   error: null,\n      // });\n    }\n  }\n\n  checkIfUserIsAFriend = () => {\n    console.log('this.props', this.props);\n    const { match, friends } = this.props;\n    const userId = match.params.userId;\n\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\n\n    if (index !== -1) {\n      return true;\n    }\n\n    return false;\n  };\n  handleAddFriendClick = async () => {\n    console.log('Clicked');\n    const userId = this.props.match.params.userId;\n    console.log(userId);\n    const url = APIURLS.addFriend(userId);\n\n    const opts = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n    };\n\n    const response = await fetch(url, opts);\n    const data = await response.json();\n    // console.log(data.succ);\n    console.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$', data);\n\n    if (data.success) {\n      this.setState({\n        success: true,\n        successMessage: data.message,\n      });\n      this.props.dispatch(addFriend(data.data.friendship));\n    } else {\n      this.setState({\n        success: null,\n        error: data.message,\n      });\n    }\n  };\n\n  handleRemoveFriend = async () => {\n    const url = APIURLS.removeFriend(this.props.match.params.userId);\n    console.log(url);\n    const opts = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromlocalStorage()}`,\n      },\n    };\n\n    const response = await fetch(url, opts);\n    const data = await response.json();\n    if (data.success) {\n      this.setState({\n        success: true,\n        successMessage: data.message,\n      });\n      this.props.dispatch(removeFriend(this.props.match.params.userId));\n    } else {\n      this.setState({\n        success: null,\n        error: data.message,\n      });\n    }\n  };\n  render() {\n    console.log('PROPS', this.props);\n\n    console.log('PROILE', this.props);\n    const user = this.props.profile.user;\n    console.log(\n      '**********************inProgress',\n      this.props.profile.inProgress\n    );\n    if (this.props.profile.inProgress) {\n      return <div>Loading </div>;\n    }\n    const { error, success } = this.state;\n    const isUserAFriend = this.checkIfUserIsAFriend();\n    return (\n      <div className=\"settings\">\n        <div className=\"img-container\">\n          <img\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n            alt=\"user-dp\"\n          />\n        </div>\n        <div className=\"field\">\n          <div className=\"field-label\">Name</div>\n          <div className=\"field-value\">{user.name}</div>\n        </div>\n        <div className=\"field\">\n          <div className=\"field-label\">Email</div>\n          <div className=\"field-value\">{user.email}</div>\n        </div>\n\n        <div className=\"btn-grp\">\n          {!isUserAFriend ? (\n            <button\n              className=\"button save-btn\"\n              onClick={this.handleAddFriendClick}\n            >\n              Add Friend\n            </button>\n          ) : (\n            <button\n              className=\"button save-btn\"\n              onClick={this.handleRemoveFriend}\n            >\n              Remove Friend\n            </button>\n          )}\n          {success && (\n            <div className=\" alert  success-dailog\">\n              {' '}\n              {this.state.successMessage}\n            </div>\n          )}\n          {error && <div className=\" alert  error-dailog\"> {error}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ profile, friends }) {\n  return {\n    profile,\n    friends,\n  };\n}\nexport default connect(mapStateToProps)(UserProfile);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as jwtDecode from 'jwt-decode';\n\nimport { fetchPosts } from '../actions/posts';\nimport { Home, Navbar, Page404, Login, Settings } from '.';\nimport PropTypes from 'prop-types';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Signup from './Signup';\nimport { authenticateUser } from '../actions/auth';\nimport UserProfile from './UserProfile';\nimport { fetchUserFriends } from '../actions/friends';\n\n// const logout = () => <div>logout</div>;\n// const signup = () => <div>signup</div>;\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n  console.log('PRivate route Props', privateRouteProps);\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        console.log('Settings', props);\n        return isLoggedin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\nexport class App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n    const token = localStorage.getItem('token');\n    console.log(token);\n    if (token) {\n      const user = jwtDecode(token);\n      console.log(user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n        })\n      );\n      this.props.dispatch(fetchUserFriends());\n    }\n  }\n\n  render() {\n    console.log('PROPS APP', this.props);\n    const { posts, auth, friends } = this.props;\n    console.log('FFFFFFFFRIEEEEEEEENDS', friends);\n    return (\n      <Router>\n        <div>\n          <Navbar />\n        </div>\n        <Switch>\n          <Route\n            exact={true}\n            path=\"/\"\n            render={(props) => {\n              return (\n                <Home\n                  {...props}\n                  posts={posts}\n                  isLoggedin={auth.isLoggedin}\n                  friends={friends}\n                />\n              );\n            }}\n          />\n          <Route path=\"/login\" component={Login} />\n          {/* <Route path=\"/logout\" component={logout} /> */}\n          <Route path=\"/signup\" component={Signup} />\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <PrivateRoute\n            path=\"/settings\"\n            component={Settings}\n            isLoggedin={auth.isLoggedin}\n          />\n          <PrivateRoute\n            path=\"/user/:userId\"\n            component={UserProfile}\n            isLoggedin={auth.isLoggedin}\n          />\n          <Route component={Page404} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\nexport default connect(mapStateToProps)(App);\n","import {\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_START,\n  SIGNUP_FAIL,\n  AUTHENTICATE_USER,\n  LOGOUT,\n  CLEARAUTHSTATE,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_FAIL,\n} from '../actions/actionTypes';\n\nconst initialAuthState = {\n  user: {},\n  error: null,\n  isLoggedin: false,\n  inProgress: false,\n};\nexport default function (state = initialAuthState, action) {\n  switch (action.type) {\n    case CLEARAUTHSTATE:\n      return {\n        ...state,\n        error: null,\n      };\n    case LOGIN_START:\n    case SIGNUP_START:\n      return {\n        ...state,\n        inProgress: true,\n      };\n    case LOGIN_SUCCESS:\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        user: action.user,\n        isLoggedin: true,\n        inProgress: false,\n        error: null,\n      };\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        inProgress: false,\n        error: action.error,\n      };\n\n    case AUTHENTICATE_USER:\n      return {\n        ...state,\n        user: action.user,\n        isLoggedin: true,\n        error: null,\n      };\n\n    case LOGOUT:\n      return {\n        ...state,\n        user: {},\n        isLoggedin: false,\n      };\n    case EDIT_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.user,\n        error: false,\n      };\n    case EDIT_USER_FAIL:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_USER_FRIENDS_SUCCESS,\n  ADD_FRIEND,\n  REMOVE_FRIEND,\n} from '../actions/actionTypes';\nconst initialFriendsState = [];\nexport default function friends(state = initialFriendsState, action) {\n  switch (action.type) {\n    case FETCH_USER_FRIENDS_SUCCESS:\n      return [...action.friends];\n    case ADD_FRIEND:\n      return state.concat(action.friend);\n    case REMOVE_FRIEND:\n      const newArr = state.filter(\n        (friend) => friend.to_user._id != action.userId\n      );\n\n      return newArr;\n    default:\n      return state;\n  }\n}\n","import { FETCH_SEARCH_RESULTSSUCCESS } from '../actions/actionTypes';\n\nconst initialSearchstate = {\n  results: [],\n};\nexport default function search(state = initialSearchstate, action) {\n  switch (action.type) {\n    case FETCH_SEARCH_RESULTSSUCCESS:\n      return {\n        ...state,\n        results: action.users,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport posts from './posts';\nimport auth from './auth';\nimport profile from './profile';\nimport friends from './friends';\nimport search from './search';\nexport default combineReducers({\n  posts,\n  auth,\n  profile,\n  friends,\n  search,\n});\n","import {\n  UPDATE_POSTS,\n  CREATE_POST,\n  ADD_COMMENT,\n  UPDATE_POST_LIKE,\n} from '../actions/actionTypes';\n\nexport default function posts(state = [], action) {\n  switch (action.type) {\n    case UPDATE_POSTS:\n      return action.posts;\n    case CREATE_POST:\n      return [action.post, ...state];\n    case ADD_COMMENT:\n      const newPosts = state.map((post) => {\n        if (post._id === action.postId) {\n          return {\n            ...post,\n            comments: [action.comment, ...post.comments],\n          };\n        }\n\n        return post;\n      });\n      return newPosts;\n\n    case UPDATE_POST_LIKE:\n      const updatedPost = state.map((post) => {\n        if (post._id === action.postId) {\n          return {\n            ...post,\n            likes: [...post.likes, action.userId],\n          };\n        }\n\n        return post;\n      });\n      return updatedPost;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './components/App';\nimport { configureStore } from './store';\n\nconst store = configureStore();\nconsole.log(store.getState());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\nimport logger from 'redux-logger';\n\nlet store;\nexport function configureStore() {\n  store = createStore(reducer, applyMiddleware(thunk, logger));\n\n  return store;\n}\n"],"sourceRoot":""}